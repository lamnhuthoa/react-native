{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    setColor = _useState2[0],\n    color = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Add a Color\"\n    }), _jsx(View, {\n      style: {\n        height: 100,\n        width: 100,\n        backgroundColor: \"rgb(0, 255, 0)\"\n      }\n    })]\n  });\n};\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"names":["React","useState","ColorScreen","setColor","color","height","width","backgroundColor","randomRgb","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"sources":["/Users/aol81hc/Desktop/rn-starter/src/screens/ColorScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Button } from \"react-native\";\n\nconst ColorScreen = () => {\n  const [setColor, color] = useState(\"\");\n\n  return (\n    <View>\n      <Button title=\"Add a Color\"></Button>\n      <View\n        style={{ height: 100, width: 100, backgroundColor: \"rgb(0, 255, 0)\" }}\n      />\n    </View>\n  );\n};\n\nconst randomRgb = () => {\n  const red = Math.floor(Math.random() * 256);\n  const green = Math.floor(Math.random() * 256);\n  const blue = Math.floor(Math.random() * 256);\n\n  return `rgb(${red}, ${green}, ${blue})`;\n};\n\nconst styles = StyleSheet.create({});\n\nexport default ColorScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAGxC,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EACxB,gBAA0BD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BE,QAAQ;IAAEC,KAAK;EAEtB,OACE,MAAC,IAAI;IAAA,WACH,KAAC,MAAM;MAAC,KAAK,EAAC;IAAa,EAAU,EACrC,KAAC,IAAI;MACH,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,KAAK,EAAE,GAAG;QAAEC,eAAe,EAAE;MAAiB;IAAE,EACtE;EAAA,EACG;AAEX,CAAC;AAED,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;EACtB,IAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EAC3C,IAAMC,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EAC7C,IAAME,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EAE5C,gBAAcH,GAAG,UAAKI,KAAK,UAAKC,IAAI;AACtC,CAAC;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAEpC,eAAef,WAAW"},"metadata":{},"sourceType":"module"}