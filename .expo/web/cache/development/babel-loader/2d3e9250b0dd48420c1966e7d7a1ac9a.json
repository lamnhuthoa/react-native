{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    color = _useState2[0],\n    setColor = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Add a Color\",\n      onPress: function onPress() {\n        setColor([].concat(_toConsumableArray(colors), [randomRgb()]));\n      }\n    }), _jsx(FlatList, {\n      keyExtractor: color,\n      data: color,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(View, {\n          style: {\n            height: 100,\n            width: 100,\n            backgroundColor: item\n          }\n        });\n      }\n    })]\n  });\n};\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"names":["React","useState","ColorScreen","color","setColor","colors","randomRgb","item","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"sources":["/Users/aol81hc/Desktop/rn-starter/src/screens/ColorScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Button, FlatList } from \"react-native\";\n\nconst ColorScreen = () => {\n  const [color, setColor] = useState([]);\n\n  return (\n    <View>\n      <Button title=\"Add a Color\" onPress={() => {\n        setColor([...colors, randomRgb()])\n      }} />\n    <FlatList keyExtractor={color} data={color} renderItem={({item}) => {\n        return (\n            <View style={{ height: 100, width: 100, backgroundColor: item }}\n            />\n        )\n    }} />\n    </View>\n  );\n};\n\nconst randomRgb = () => {\n  const red = Math.floor(Math.random() * 256);\n  const green = Math.floor(Math.random() * 256);\n  const blue = Math.floor(Math.random() * 256);\n\n  return `rgb(${red}, ${green}, ${blue})`;\n};\n\nconst styles = StyleSheet.create({});\n\nexport default ColorScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxC,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EACxB,gBAA0BD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BE,KAAK;IAAEC,QAAQ;EAEtB,OACE,MAAC,IAAI;IAAA,WACH,KAAC,MAAM;MAAC,KAAK,EAAC,aAAa;MAAC,OAAO,EAAE,mBAAM;QACzCA,QAAQ,8BAAKC,MAAM,IAAEC,SAAS,EAAE,GAAE;MACpC;IAAE,EAAG,EACP,KAAC,QAAQ;MAAC,YAAY,EAAEH,KAAM;MAAC,IAAI,EAAEA,KAAM;MAAC,UAAU,EAAE,0BAAY;QAAA,IAAVI,IAAI,QAAJA,IAAI;QAC1D,OACI,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEC,MAAM,EAAE,GAAG;YAAEC,KAAK,EAAE,GAAG;YAAEC,eAAe,EAAEH;UAAK;QAAE,EAC9D;MAEV;IAAE,EAAG;EAAA,EACE;AAEX,CAAC;AAED,IAAMD,SAAS,GAAG,SAAZA,SAAS,GAAS;EACtB,IAAMK,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EAC3C,IAAMC,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EAC7C,IAAME,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EAE5C,gBAAcH,GAAG,UAAKI,KAAK,UAAKC,IAAI;AACtC,CAAC;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAEpC,eAAejB,WAAW"},"metadata":{},"sourceType":"module"}